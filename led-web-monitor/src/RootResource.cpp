#include <string>
#include <iostream>
#include <fstream>
using namespace std;

#include "RootResource.hpp"

char gRootPage[] =
"<!DOCTYPE html>"
"<html>"
"<head>"
"    <style>"
"      table {"
"        border-collapse: collapse;"
"      }"
""
"      table, td, th {"
"        padding: 7px;"
"        border-bottom: 1px solid #ddd;"
"        text-align: center;"
"      }"
""
"      td.error {"
"        background-color: #f7a3aa;"
"      }"
""
"      td.ok {"
"        background-color: #b2f4c8;"
"      }"
""
"      button {"
"        font-size: 24px;"
"        padding: 32px 12px;"
"        margin-right: 24px;"
"        background-color: #e7e7e7;"
"        color: black;"
"        border: 2px solid black;"
"      }"
"    </style>"
"    <script>"
"        function refreshStatus() {"
"          document.getElementById(\"nodeStatusTable\").innerHTML = \"Refreshing...\";"
"          var xhttp = new XMLHttpRequest();"
"          xhttp.onreadystatechange = function() {"
"            if (this.readyState == 4 && this.status == 200) {"
"              var json = JSON.parse(this.responseText);"
"              var nodeTab = \"<table><tr><th>Address</th><th>Rsp Received</th><th>Error</th><th>Response Time (ms)</th></tr>\";"
"              for( var i = 0; i < json.nodes.length; i++ ) {"
"                  nodeTab += \"<tr>\";"
"                  nodeTab += \"<td>\" + json.nodes[i].addr + \"</td>\";"
""
"                  if( json.nodes[i].rspRX == \"false\" )"
"                    nodeTab += \"<td class=\\\"error\\\">no</td>\";"
"                   else"
"                    nodeTab += \"<td class=\\\"ok\\\">yes</td>\";"
""
"                  if( json.nodes[i].error == \"true\" )"
"                    nodeTab += \"<td class=\\\"error\\\">yes</td>\";"
"                   else"
"                    nodeTab += \"<td class=\\\"ok\\\">no</td>\";"
""
"                  nodeTab += \"<td>\" + json.nodes[i].rspMS + \"</td>\";"
"                  nodeTab += \"</tr>\";"
"               }"
"               nodeTab += \"</table>\";"
"              document.getElementById(\"nodeStatusTable\").innerHTML = nodeTab;"
"            }"
"          };"
"          xhttp.open(\"GET\", \"crled/status\", true);"
"          xhttp.send();"
"          }"
""
"        function sendSequence( seqIndex ) {"
"          var url = \"crled/sequence?seqIndex=\" + seqIndex;"
"          console.log( url );"
""
"          var xhttp = new XMLHttpRequest();"
"          xhttp.onreadystatechange = function() {"
"            if (this.readyState == 4) {"
"              if( this.status == 200 )"
"              {"
"                document.getElementById(\"startSeqResult\").innerHTML = \"Request Complete\";"
"              }"
"              else"
"              {"
"                document.getElementById(\"startSeqResult\").innerHTML = \"Request Failed\";"
"              }"
"            }"
"          };"
"          xhttp.open(\"PUT\", url, true);"
"          xhttp.send();"
"          }"
""
"        function startSequence() {"
"          var select = document.getElementById(\"seqIndexSelect\");"
"          var seqIndex = select.options[select.selectedIndex].value;" 
"          sendSequence( seqIndex );"
"        }"
""
"        function startZero() {"
"          sendSequence( 0 );"
"        }"
""
"        function startOne() {"
"          sendSequence( 1 );"
"        }"
""
"        function startTwo() {"
"          sendSequence( 2 );"
"        }"
""
"        function clearAll() {"
"          var xhttp = new XMLHttpRequest();"
"          xhttp.onreadystatechange = function() {"
"            if (this.readyState == 4) {"
"              if( this.status == 200 )"
"              {"
"                document.getElementById(\"clearSeqResult\").innerHTML = \"Request Complete\";"
"              }"
"              else"
"              {"
"                document.getElementById(\"clearSeqResult\").innerHTML = \"Request Failed\";"
"              }"
"            }"
"          };"
"          xhttp.open(\"DELETE\", \"crled/sequence\", true);"
"          xhttp.send();"
"          }"
"    </script>"
"</head>"
"<body>"
""
"<div id=\"crledctrl\">"
"  <h2>Node Status</h2>"
"  <button type=\"button\" onclick=\"refreshStatus()\">Refresh</button>"
"  <div id=\"nodeStatusTable\">"
"  </div>"
"  <hr/>"
"  <h2>Clear Sequence</h2>"
"  <button type=\"button\" onclick=\"clearAll()\">Clear All</button>"
"  <div id=\"clearSeqResult\">"
"  </div>"
"  <hr/>"
"  <h2>Quick Sequence</h2>"
"  <button type=\"button\" onclick=\"startZero()\">Ladder Up</button>"
"  <button type=\"button\" onclick=\"startOne()\">Sparkle</button>"
"  <button type=\"button\" onclick=\"startTwo()\">Fade</button>"
"  <hr/>"
"  <h2>Start Sequence</h2>"
"  <select id=\"seqIndexSelect\">"
"    <option value=\"0\">0</option>"
"    <option value=\"1\">1</option>"
"    <option value=\"2\">2</option>"
"    <option value=\"3\">3</option>"
"    <option value=\"4\">4</option>"
"    <option value=\"5\">5</option>"
"    <option value=\"6\">6</option>"
"    <option value=\"7\">7</option>"
"    <option value=\"8\">8</option>"
"    <option value=\"9\">9</option>"
"    <option value=\"10\">10</option>"
"  </select>"
"  <button type=\"button\" onclick=\"startSequence()\">Start Sequence</button>"
"  <div id=\"startSeqResult\">"
"  </div>"
"</div>"
""
"</body>"
"</html>";

RootResource::RootResource()
{
    setURLPattern( "/*", (REST_RMETHOD_T)(REST_RMETHOD_GET) ); 
}

RootResource::~RootResource()
{

}

void 
RootResource::restGet( RESTRequest *request )
{
    //std::string resp;

    cout << "RootResource::restGet -- start" << std::endl;

    // Build response data
    //resp = "<html><head></head><h1>Hello</h1><body></body></html>";

    RESTRepresentation *rspRep = request->getOutboundRepresentation();
    rspRep->setSimpleContent( "text/html", (unsigned char *) gRootPage, sizeof(gRootPage) );

    request->setResponseCode( REST_HTTP_RCODE_OK );
    request->sendResponse();

    return;
}

